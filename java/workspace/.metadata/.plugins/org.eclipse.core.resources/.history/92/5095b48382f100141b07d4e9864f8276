package com.wilsonflying.playMusic;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class MainActivity extends Activity {

	private MediaPlayer mediaPlayer;
	private List<String> audioList = new ArrayList<String>();
	private int currentIndex;
	private final String EXTERNAL_PATH = "/sdcard";
	private String[] audioFmtSet = new String[]{".mp3", ".mav", ".3gp"};
	Button button_pause;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.my_layout);
		
		Button button_pre = (Button) findViewById(R.id.button_pre);
		Button button_play  =  (Button) findViewById(R.id.button_play);
		Button button_stop = (Button) findViewById(R.id.button_stop);
		Button button_next = (Button) findViewById(R.id.button_next);
		button_pause = (Button) findViewById(R.id.button_pause);

		mediaPlayer = new MediaPlayer();
		
		listAudio();//search audio files and add to listview
		
		button_play.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				playMusic(audioList.get(currentIndex));
			}
		});
		
		button_pause.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				if(mediaPlayer.isPlaying()){
					mediaPlayer.pause();
					button_pause.setText("继续");
				}else{
					playMusic(audioList.get(currentIndex));
					button_pause.setText("暂停");
				}
			}
		});
		
	}
	
	private void listAudio(){
		getFiles(EXTERNAL_PATH);
	}
	
	private void getFiles(String path){
		File file = new File(path);
		File[] files = file.listFiles();
		
		if(files == null){
			return;
		}
		
		for(File f:files){
			if(f.isDirectory()){
				getFiles(f.getAbsolutePath());
			}else{
				if(isAudioFile(f.getPath())){
					audioList.add(f.getPath());
				}
			}
		}
		
	}
	
	private boolean isAudioFile(String fileName){
		for(String fmt:audioFmtSet){
			if(fileName.contains(fmt)){
				return true;
			}
		}
		return false;
	}
	
	private void playMusic(String path){
		if(mediaPlayer.isPlaying()){
			mediaPlayer.stop();
		}
		mediaPlayer.reset();
		try {
			mediaPlayer.setDataSource(path);
			mediaPlayer.prepare();
			mediaPlayer.start();
			
			button_pause.setText("暂停");
			button_pause.setEnabled(true);
		} catch (IllegalArgumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SecurityException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IllegalStateException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		
	}
}
